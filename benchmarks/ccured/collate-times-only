#!/usr/bin/perl -w

use strict;
use File::Basename;
use FileHandle;


local $, = "\t";
local $\ = "\n";
print('when', 'func', 'seed',
      'user', 'system', 'elapsed', 'cpu', 'text', 'data', 'max',
      'inputs', 'outputs', 'major', 'minor', 'swaps');


my @funcs = ('MakeTree', 'CountTree', 'child', 'gtequal_adj_neighbor', 'sum_adjacent', 'perimeter');


foreach my $func (@funcs) {
    foreach my $when ('always', 'sample') {
	my $file = new FileHandle("perimeter/$when-only-$func.times", 'r') or die;

	while (not $file->eof) {
	    my $seed;
	    my ($user, $system, $elapsedMin, $elapsedSec, $cpu, $text, $data, $max);
	    my ($inputs, $outputs, $major, $minor, $swaps);
	    
	    while (<$file>) {
		$seed = $1
		    if /SAMPLER_EVENT_COUNTDOWNS=\.\.\/countdowns\/\d+-(\d+)\.counts/;
		($user, $system, $elapsedMin, $elapsedSec, $cpu, $text, $data, $max) = ($1, $2, $3, $4, $5, $6, $7, $8)
		    if /\b(\d+\.\d+)user (\d+\.\d+)system (\d+):(\d+\.\d+)elapsed (\d+)%CPU \((\d+)avgtext\+(\d+)avgdata (\d+)maxresident\)k/;
		($inputs, $outputs, $major, $minor, $swaps) = ($1, $2, $3, $4, $5)
		    if /\b(\d+)inputs\+(\d+)outputs \((\d+)major\+(\d+)minor\)pagefaults (\d+)swaps/;

		last if defined $inputs;
	    }

	    if (defined $seed || defined $user || defined $inputs) {
		die unless defined $seed;
		die unless defined $user;
		die unless defined $inputs;
		
		my $elapsed = 60 * $elapsedMin + $elapsedSec;
		print($when, $func, $seed,
		      $user, $system, $elapsed, $cpu, $text, $data, $max,
		      $inputs, $outputs, $major, $minor, $swaps);
	    }
	}
    }
}
