#!/usr/bin/perl -w

use strict;
use FileHandle;


local $, = "\t";
local $\ = "\n";
print('benchmark', 'when', 'where', 'seed',
      'user', 'system', 'elapsed', 'cpu', 'text', 'data', 'max',
      'inputs', 'outputs', 'major', 'minor', 'swaps');


my @logs = glob '*/*-*.times';

foreach my $log (@logs) {
    $log =~ /^(.+)\/([^-]+)-(.+)\.times$/ or die;
    my ($benchmark, $when, $where) = ($1, $2, $3);

    my $file = new FileHandle($log, 'r') or die;

    while (not $file->eof) {
	my $seed;
	my ($user, $system, $elapsedMin, $elapsedSec, $cpu, $text, $data, $max);
	my ($inputs, $outputs, $major, $minor, $swaps);
	
	while (<$file>) {
	    $seed = $1
		if /SAMPLER_EVENT_COUNTDOWNS=\.\.\/countdowns\/100-(\d+)\.counts/;
	    ($user, $system, $elapsedMin, $elapsedSec, $cpu, $text, $data, $max) = ($1, $2, $3, $4, $5, $6, $7, $8)
		if /\b(\d+\.\d+)user (\d+\.\d+)system (\d+):(\d+\.\d+)elapsed (\d+)%CPU \((\d+)avgtext\+(\d+)avgdata (\d+)maxresident\)k/;
	    ($inputs, $outputs, $major, $minor, $swaps) = ($1, $2, $3, $4, $5)
		if /\b(\d+)inputs\+(\d+)outputs \((\d+)major\+(\d+)minor\)pagefaults (\d+)swaps/;

	    last if defined $inputs;
	}

	if (defined $seed || defined $user || defined $inputs) {
	    die unless defined $seed;
	    die unless defined $user;
	    die unless defined $inputs;
	    
	    my $elapsed = 60 * $elapsedMin + $elapsedSec;
	    print($benchmark, $when, $where, $seed,
		  $user, $system, $elapsed, $cpu, $text, $data, $max,
		  $inputs, $outputs, $major, $minor, $swaps);
	}
    }
}
