#!/usr/bin/perl -w
# -*- cperl -*-

use strict;
use FindBin;


########################################################################


my $scheme = shift
    or die "Usage: $0 <scheme> <rpmbuild flags> ...\n";

@find_driver_fragment@


########################################################################


my %macros = (
	      _sampler_datadir => '%{?sampler_datadir}%{!?sampler_datadir:%{_datadir}/sampler}',
	      _sampler_libdir => '%{?sampler_libdir}%{!?sampler_libdir:%{_libdir}/sampler}',
	      sampler_tooldir => "$FindBin::Bin",

	      sampler_cc => $driver,
	      sampler_scheme => $scheme,
	      sampler_cc_flags => '%{nil}',

	      'sampler_tags(s:)' => <<'EOF',
Requires: sampler-gnome
BuildRequires: sampler-devel >= 0.5
%global _sampler_source %{-s*}%{!-s:1}
Source%{_sampler_source}: %{name}-sampler.tar.gz
%{nil}
EOF

	      sampler_description => 'This package has been built with sampled %{sampler_scheme} instrumentation.',

	      sampler_package => <<'EOF',
%package samplerinfo
Summary: Sampler information for package %{name}
Group: Development/Debug
AutoReqProv: 0
%description samplerinfo
This package provides sampler information for package %{name}, built
using the "%{sampler_scheme}" instrumentation scheme.  You do not need
this to use %{name}.  Most users have no need to install this package.
%files samplerinfo
%defattr(-,root,root)
%{_sampler_libdir}/sites/*
%{nil}
EOF

	      sampler_prep => 'tar xzf %{S:%{_sampler_source}}',

	      _sampler_sparsity => '%{?sampler_sparsity}%{!?sampler_sparsity:100}',
	      _sampler_reporting_host => '%{?sampler_reporting_host}%{!?sampler_reporting_host:www.example.org}',
	      _sampler_reporting_url => '%{?sampler_reporting_url}%{!?sampler_reporting_url:https://%{_sampler_reporting_host}/cgi-bin/sampler-upload}',

	      sampler_prebuild => <<'EOF',
export CC='%{sampler_cc} %{sampler_scheme} %{sampler_cc_flags}'
sed -e 's/@name@/%{name}/g' -e 's/@sparsity@/%{_sampler_sparsity}/g' -e 's!@reporting_url@!%{_sampler_reporting_url}!g' <sampler/application.schemas.in >sampler/sampler-%{name}.schemas
sed -e 's/@name@/%{name}/g' -e 's/@version@/%{version}/g' -e 's/@release@/%{release}/g' -e 's/@scheme@/%{sampler_scheme}/g' -e 's!@sampler_datadir@!%{_sampler_datadir}!g' <sampler/config.in >sampler/config
sed -e 's!@sampler_datadir@!%{_sampler_datadir}!g' <sampler/wrapper.in >sampler/wrapper
chmod a+x sampler/wrapper
%{nil}
EOF

	      sampler_wrapped => '%{_bindir}/%{name}',

	      sampler_install => <<'EOF',
install -d %{buildroot}%{_sampler_libdir}/applications/%{name}
install -m 644 sampler/config sampler/interface.glade %{buildroot}%{_sampler_libdir}/applications/%{name}
install sampler/wrapper %{buildroot}%{_sampler_libdir}/applications/%{name}
mv %{buildroot}%{sampler_wrapped} %{buildroot}%{_sampler_libdir}/applications/%{name}/executable
ln -s %{_sampler_libdir}/applications/%{name}/wrapper %{buildroot}%{sampler_wrapped}
install -d %{buildroot}%{_sysconfdir}/gconf/schemas
install sampler/sampler-%{name}.schemas %{buildroot}%{_sysconfdir}/gconf/schemas
%{sampler_tooldir}/find-sampler-info $RPM_BUILD_ROOT
%{nil}
EOF

	      sampler_files => '%attr(-, root, root) %{_sampler_libdir}/applications/%{name}',
	      sampler_files_gconf => '%attr(-, root, root) %{_sysconfdir}/gconf/schemas/sampler-%{name}.schemas',

	      sampler_post => 'env GCONF_CONFIG_SOURCE=`gconftool-2 --get-default-source` gconftool-2 --makefile-install-rule %{_sysconfdir}/gconf/schemas/sampler-%{name}.schemas >/dev/null'
);


########################################################################


while (my ($name, $value) = each %macros) {
    $value =~ s/\n(?=.)/\\\n/g;
    unshift @ARGV, '--define', "$name $value";
}

exec 'rpmbuild', @ARGV;
die "cannot exec rpmbuild: $!\n";
