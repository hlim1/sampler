/*-*- c -*-*/
%%
headers

#include <pygtk/pygtk.h>
#include <pyorbit.h>
#include "broken.h"

%%
modulename broken
%%
import gobject.GObject as PyGObject_Type
%%
ignore-glob
  *_get_type
%%
override broken_listener_new kwargs

static int
_wrap_broken_listener_new(PyGObject *self, PyObject *args, PyObject *kwargs)
{
  static char *kwlist[] = {"object", "callback", 0};
  PyObject *object;
  PyObject *callback;

  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:broken.Listener.__init__", kwlist, &object, &callback))
    return -1;

  if (!pygobject_check(object, &PyCORBA_Object_Type))
    {
      PyErr_SetString(PyExc_TypeError, "object argument must be a CORBA object");
      return 0;
    }

  if (!PyCallable_Check(callback))
    {
      PyErr_SetString(PyExc_TypeError, "callback argument must be callable");
      return 0;
    }

  PyCORBA_Object * const corba = (PyCORBA_Object *) object;

  self->obj = (GObject *) broken_listener_new(corba->objref, 0);
  if (!self->obj)
    {
      PyErr_SetString(PyExc_RuntimeError, "could not create BrokenListener object");
      return -1;
    }

  pygobject_register_wrapper((PyObject *) self);
  return 0;
}
