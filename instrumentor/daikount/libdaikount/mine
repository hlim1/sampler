#!/usr/bin/perl -w

use strict;

use FileHandle;


########################################################################


my %tally;

my $grand;


foreach (@ARGV) {
    #my $outcome = shift or die;
    my $traceFile = shift or die;

    my $trace = new FileHandle $traceFile or die;
    while (<$trace>) {
	my @F = split "\t";
	die unless @F == 9;
	my ($file, $line, $func, $left, $right, $id, $less, $equal, $greater) = @F;

	my $slice = \$tally{$file}{$line}{$func}{$left}{$right}{$id};
	$$slice->{less} += $less;
	$$slice->{equal} += $equal;
	$$slice->{greater} += $greater;

	$grand += $less + $equal + $greater;
    }
}


$, = "\t";
$\ = "\n";

print "grand total: $grand\n";

while (my ($file, $fileHash) = each %tally) {
    while (my ($line, $lineHash) = each %{$fileHash}) {
	while (my ($func, $funcHash) = each %{$lineHash}) {
	    while (my ($left, $leftHash) = each %{$funcHash}) {
		while (my ($right, $rightHash) = each %{$leftHash}) {
		    while (my ($id, $idHash) = each %{$rightHash}) {
			my $less = $idHash->{less};
			my $equal = $idHash->{equal};
			my $greater = $idHash->{greater};
			print ($file, $line, $func, $left, $right, $id, $less, $equal, $greater);
		    }
		}
	    }
	}
    }
}
