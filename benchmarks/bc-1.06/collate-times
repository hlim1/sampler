#!/usr/bin/perl -w

use strict;
use FileHandle;

@ARGV == 1 or die "Usage: $0 <times-dir>\n";
my $times = shift;

local $, = "\t";
local $\ = "\n";
print('form', 'seed',
      'user', 'system', 'elapsed', 'cpu', 'text', 'data', 'max',
      'inputs', 'outputs', 'major', 'minor', 'swaps');


my @sparsity = (100, 1000, 10000, 1000000);
my @form = ('always-none', map("sample-all-$_", @sparsity), 'always-all');

foreach my $form (@form) {
    my $file = new FileHandle("$times/$form.times", 'r') or die;

    while (not $file->eof) {
	my $seed;
	my ($user, $system, $elapsedMin, $elapsedSec, $cpu, $text, $data, $max);
	my ($inputs, $outputs, $major, $minor, $swaps);
	
	while (<$file>) {
	    $seed = $1
		if /SEED=(\d+)$/;
	    ($user, $system, $elapsedMin, $elapsedSec, $cpu, $text, $data, $max) = ($1, $2, $3, $4, $5, $6, $7, $8)
		if /\b(\d+\.\d+)user (\d+\.\d+)system (\d+):(\d+\.\d+)elapsed (\d+)%CPU \((\d+)avgtext\+(\d+)avgdata (\d+)maxresident\)k/;
	    ($inputs, $outputs, $major, $minor, $swaps) = ($1, $2, $3, $4, $5)
		if /\b(\d+)inputs\+(\d+)outputs \((\d+)major\+(\d+)minor\)pagefaults (\d+)swaps/;

	    last if defined $inputs;
	}

	if (defined $seed || defined $user || defined $inputs) {
	    die unless defined $seed;
	    die unless defined $user;
	    die unless defined $inputs;
	    
	    my $elapsed = 60 * $elapsedMin + $elapsedSec;
	    print($form, $seed,
		  $user, $system, $elapsed, $cpu, $text, $data, $max,
		  $inputs, $outputs, $major, $minor, $swaps);
	}
    }
}
