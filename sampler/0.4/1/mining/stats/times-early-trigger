You are now connected as new user liblit.
CREATE SEQUENCE "session_seq" start 1 increment 1 maxvalue 9223372036854775807 minvalue 1 cache 1;
CREATE
CREATE TABLE "sessions" (
	"session" integer DEFAULT nextval('session_seq'::text) NOT NULL,
	"signal" smallint NOT NULL,
	CONSTRAINT "sessions_session" CHECK (("session" > 0)),
	CONSTRAINT "sessions_signal" CHECK ((signal >= 0)),
	Constraint "sessions_pkey" Primary Key ("session")
);
psql:/var/tmp/early-trigger.sql:26: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index 'sessions_pkey' for table 'sessions'
CREATE
CREATE TABLE "sites" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"file" text NOT NULL,
	"line" integer NOT NULL,
	CONSTRAINT "sites_file" CHECK ((file <> ''::text)),
	CONSTRAINT "sites_line" CHECK ((line > 0)),
	CONSTRAINT "sites_sample" CHECK ((sample > 0)),
	CONSTRAINT "sites_session" CHECK (("session" > 0))
);
CREATE
CREATE TABLE "samples" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"expression" text NOT NULL,
	"type" smallint NOT NULL,
	"value" text NOT NULL,
	CONSTRAINT "samples_expression" CHECK ((expression <> ''::text)),
	CONSTRAINT "samples_sample" CHECK ((sample > 0)),
	CONSTRAINT "samples_session" CHECK (("session" > 0)),
	CONSTRAINT "samples_type" CHECK ((("type" >= 1) AND ("type" <= 15))),
	CONSTRAINT "samples_value" CHECK ((value <> ''::text))
);
CREATE
CREATE UNIQUE INDEX sites_session_key ON sites USING btree ("session", sample);
CREATE
CREATE UNIQUE INDEX samples_session_key ON samples USING btree ("session", sample, expression);
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "sites"  FROM "sessions" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "samples"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
COPY "sessions" FROM stdin;
COPY "sites" FROM stdin;
COPY "samples" FROM stdin;
SELECT setval ('"session_seq"', 1, true);
 setval 
--------
      1
(1 row)

psql -e -f /var/tmp/$strategy.sql liblit  0.88s user 0.03s system 1% cpu 1:12.40 total
You are now connected as new user liblit.
CREATE SEQUENCE "session_seq" start 1 increment 1 maxvalue 9223372036854775807 minvalue 1 cache 1;
CREATE
CREATE TABLE "sessions" (
	"session" integer DEFAULT nextval('session_seq'::text) NOT NULL,
	"signal" smallint NOT NULL,
	CONSTRAINT "sessions_session" CHECK (("session" > 0)),
	CONSTRAINT "sessions_signal" CHECK ((signal >= 0)),
	Constraint "sessions_pkey" Primary Key ("session")
);
psql:/var/tmp/early-trigger.sql:26: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index 'sessions_pkey' for table 'sessions'
CREATE
CREATE TABLE "sites" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"file" text NOT NULL,
	"line" integer NOT NULL,
	CONSTRAINT "sites_file" CHECK ((file <> ''::text)),
	CONSTRAINT "sites_line" CHECK ((line > 0)),
	CONSTRAINT "sites_sample" CHECK ((sample > 0)),
	CONSTRAINT "sites_session" CHECK (("session" > 0))
);
CREATE
CREATE TABLE "samples" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"expression" text NOT NULL,
	"type" smallint NOT NULL,
	"value" text NOT NULL,
	CONSTRAINT "samples_expression" CHECK ((expression <> ''::text)),
	CONSTRAINT "samples_sample" CHECK ((sample > 0)),
	CONSTRAINT "samples_session" CHECK (("session" > 0)),
	CONSTRAINT "samples_type" CHECK ((("type" >= 1) AND ("type" <= 15))),
	CONSTRAINT "samples_value" CHECK ((value <> ''::text))
);
CREATE
CREATE UNIQUE INDEX sites_session_key ON sites USING btree ("session", sample);
CREATE
CREATE UNIQUE INDEX samples_session_key ON samples USING btree ("session", sample, expression);
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "sites"  FROM "sessions" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "samples"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
COPY "sessions" FROM stdin;
COPY "sites" FROM stdin;
COPY "samples" FROM stdin;
SELECT setval ('"session_seq"', 1, true);
 setval 
--------
      1
(1 row)

psql -e -f /var/tmp/$strategy.sql liblit  0.89s user 0.03s system 1% cpu 1:11.79 total
You are now connected as new user liblit.
CREATE SEQUENCE "session_seq" start 1 increment 1 maxvalue 9223372036854775807 minvalue 1 cache 1;
CREATE
CREATE TABLE "sessions" (
	"session" integer DEFAULT nextval('session_seq'::text) NOT NULL,
	"signal" smallint NOT NULL,
	CONSTRAINT "sessions_session" CHECK (("session" > 0)),
	CONSTRAINT "sessions_signal" CHECK ((signal >= 0)),
	Constraint "sessions_pkey" Primary Key ("session")
);
psql:/var/tmp/early-trigger.sql:26: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index 'sessions_pkey' for table 'sessions'
CREATE
CREATE TABLE "sites" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"file" text NOT NULL,
	"line" integer NOT NULL,
	CONSTRAINT "sites_file" CHECK ((file <> ''::text)),
	CONSTRAINT "sites_line" CHECK ((line > 0)),
	CONSTRAINT "sites_sample" CHECK ((sample > 0)),
	CONSTRAINT "sites_session" CHECK (("session" > 0))
);
CREATE
CREATE TABLE "samples" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"expression" text NOT NULL,
	"type" smallint NOT NULL,
	"value" text NOT NULL,
	CONSTRAINT "samples_expression" CHECK ((expression <> ''::text)),
	CONSTRAINT "samples_sample" CHECK ((sample > 0)),
	CONSTRAINT "samples_session" CHECK (("session" > 0)),
	CONSTRAINT "samples_type" CHECK ((("type" >= 1) AND ("type" <= 15))),
	CONSTRAINT "samples_value" CHECK ((value <> ''::text))
);
CREATE
CREATE UNIQUE INDEX sites_session_key ON sites USING btree ("session", sample);
CREATE
CREATE UNIQUE INDEX samples_session_key ON samples USING btree ("session", sample, expression);
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "sites"  FROM "sessions" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "samples"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
COPY "sessions" FROM stdin;
COPY "sites" FROM stdin;
COPY "samples" FROM stdin;
SELECT setval ('"session_seq"', 1, true);
 setval 
--------
      1
(1 row)

psql -e -f /var/tmp/$strategy.sql liblit  0.90s user 0.07s system 1% cpu 1:12.25 total
You are now connected as new user liblit.
CREATE SEQUENCE "session_seq" start 1 increment 1 maxvalue 9223372036854775807 minvalue 1 cache 1;
CREATE
CREATE TABLE "sessions" (
	"session" integer DEFAULT nextval('session_seq'::text) NOT NULL,
	"signal" smallint NOT NULL,
	CONSTRAINT "sessions_session" CHECK (("session" > 0)),
	CONSTRAINT "sessions_signal" CHECK ((signal >= 0)),
	Constraint "sessions_pkey" Primary Key ("session")
);
psql:/var/tmp/early-trigger.sql:26: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index 'sessions_pkey' for table 'sessions'
CREATE
CREATE TABLE "sites" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"file" text NOT NULL,
	"line" integer NOT NULL,
	CONSTRAINT "sites_file" CHECK ((file <> ''::text)),
	CONSTRAINT "sites_line" CHECK ((line > 0)),
	CONSTRAINT "sites_sample" CHECK ((sample > 0)),
	CONSTRAINT "sites_session" CHECK (("session" > 0))
);
CREATE
CREATE TABLE "samples" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"expression" text NOT NULL,
	"type" smallint NOT NULL,
	"value" text NOT NULL,
	CONSTRAINT "samples_expression" CHECK ((expression <> ''::text)),
	CONSTRAINT "samples_sample" CHECK ((sample > 0)),
	CONSTRAINT "samples_session" CHECK (("session" > 0)),
	CONSTRAINT "samples_type" CHECK ((("type" >= 1) AND ("type" <= 15))),
	CONSTRAINT "samples_value" CHECK ((value <> ''::text))
);
CREATE
CREATE UNIQUE INDEX sites_session_key ON sites USING btree ("session", sample);
CREATE
CREATE UNIQUE INDEX samples_session_key ON samples USING btree ("session", sample, expression);
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "sites"  FROM "sessions" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "samples"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
COPY "sessions" FROM stdin;
COPY "sites" FROM stdin;
COPY "samples" FROM stdin;
SELECT setval ('"session_seq"', 1, true);
 setval 
--------
      1
(1 row)

psql -e -f /var/tmp/$strategy.sql liblit  0.89s user 0.05s system 1% cpu 1:11.67 total
You are now connected as new user liblit.
CREATE SEQUENCE "session_seq" start 1 increment 1 maxvalue 9223372036854775807 minvalue 1 cache 1;
CREATE
CREATE TABLE "sessions" (
	"session" integer DEFAULT nextval('session_seq'::text) NOT NULL,
	"signal" smallint NOT NULL,
	CONSTRAINT "sessions_session" CHECK (("session" > 0)),
	CONSTRAINT "sessions_signal" CHECK ((signal >= 0)),
	Constraint "sessions_pkey" Primary Key ("session")
);
psql:/var/tmp/early-trigger.sql:26: NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index 'sessions_pkey' for table 'sessions'
CREATE
CREATE TABLE "sites" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"file" text NOT NULL,
	"line" integer NOT NULL,
	CONSTRAINT "sites_file" CHECK ((file <> ''::text)),
	CONSTRAINT "sites_line" CHECK ((line > 0)),
	CONSTRAINT "sites_sample" CHECK ((sample > 0)),
	CONSTRAINT "sites_session" CHECK (("session" > 0))
);
CREATE
CREATE TABLE "samples" (
	"session" integer NOT NULL,
	"sample" bigint NOT NULL,
	"expression" text NOT NULL,
	"type" smallint NOT NULL,
	"value" text NOT NULL,
	CONSTRAINT "samples_expression" CHECK ((expression <> ''::text)),
	CONSTRAINT "samples_sample" CHECK ((sample > 0)),
	CONSTRAINT "samples_session" CHECK (("session" > 0)),
	CONSTRAINT "samples_type" CHECK ((("type" >= 1) AND ("type" <= 15))),
	CONSTRAINT "samples_value" CHECK ((value <> ''::text))
);
CREATE
CREATE UNIQUE INDEX sites_session_key ON sites USING btree ("session", sample);
CREATE
CREATE UNIQUE INDEX samples_session_key ON samples USING btree ("session", sample, expression);
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "sites"  FROM "sessions" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sessions"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'sites', 'sessions', 'FULL', 'session', 'session');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "samples"  FROM "sites" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "sites"  FROM "samples" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_upd" ('<unnamed>', 'samples', 'sites', 'FULL', 'session', 'session', 'sample', 'sample');
CREATE
COPY "sessions" FROM stdin;
COPY "sites" FROM stdin;
COPY "samples" FROM stdin;
SELECT setval ('"session_seq"', 1, true);
 setval 
--------
      1
(1 row)

psql -e -f /var/tmp/$strategy.sql liblit  0.88s user 0.05s system 1% cpu 1:12.70 total
