#!/usr/bin/perl -w

use strict;
use FileHandle;


my $file = new FileHandle 'collated-times.txt' or die;
$file->getline;

my %stats;

while (local $_ = $file->getline) {
    my ($suite, $benchmark, $when, $where, $sparsity, $seed, $user, $system, $elapsed, $cpu, $text, $data, $max, $inputs, $outputs, $major, $minor, $swaps) = split /\t/, $_;
    $stats{$benchmark}{$when}{$where}{$seed}{elapsed} = $elapsed;
    $stats{$benchmark}{$when}{$where}{$seed}{cpu} = $cpu;
}


local ($,, $\) = ("\t", "\n");

while (my ($benchmark, $stats) = each %stats) {
    while (my $where = each %{$stats->{sample}}) {
	my $overhead = 0;
	my $count = 0;
	foreach my $seed (1 .. 4) {
	    next if $where eq 'all';
	    next if $where eq 'none';
	    my $cpuLimit = 98;
	    next if $stats->{sample}{$where}{$seed}{cpu} < $cpuLimit;
	    next if $stats->{always}{none}{$seed}{cpu} < $cpuLimit;
	    my $sampled = $stats->{sample}{$where}{$seed}{elapsed} or die;
	    my $always = $stats->{always}{none}{$seed}{elapsed} or die;
	    my $slowdown = $sampled / $always;
	    $overhead += $slowdown;
	    ++$count;
	}
	next unless $count;
	$overhead /= $count;
	print $benchmark, $where, $overhead;
    }
}
