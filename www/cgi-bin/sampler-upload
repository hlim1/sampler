#!/usr/bin/perl -w

use strict;

use CGI qw(:standard -private_tempfiles)
use CGI::Carp qw(fatalsToBrowser);
use CGI::Pretty;

use File::Copy;
use FileHandle;


########################################################################


print header();


my $query = new CGI;

$ENV{UNIQUE_ID} =~ /^[-@A-Za-z0-9]+$/ or die "\$UNIQUE_ID looks suspicious: \"$ENV{UNIQUE_ID}\"\n";
my $dir = "/var/www/uploads/$ENV{UNIQUE_ID}";
mkdir $dir or die "cannot build upload directory $dir: $!\n";
END { rmdir $dir if $dir; }


sub stash_environ () {
    my $environment = new FileHandle "$dir/environment", 'w' or die $!;
    local ($,, $\) = ("\t", "\n");
    while (my ($key, $value) = each %ENV) {
	$environment->print($key, $value)
	    if $key =~ /^(REMOTE|HTTP_SAMPLER)_/;
    }
}


sub stash_file ($) {
    my $name = shift;
    my $handle = $query->upload($name);
    copy($handle, "$dir/$name.gz") if $handle;
}


stash_environ();
stash_file $_ foreach $query->param;

print ($query->header,
       $query->start_html('Server Reply Demo'),
       $query->h1('Server Reply Demo'),
       $query->p('This is a demonstration of presenting server reply messages to the client.  Ordinarily we would only use this if there was some important piece of information we needed to communicate to all clients.'),
       $query->end_html);
