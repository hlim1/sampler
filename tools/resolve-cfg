#!/usr/bin/perl -w

use strict;
use 5.008;			# for safe pipe opens using list form of open

use Fcntl qw(SEEK_SET);
use FileHandle;
use FindBin;

use lib $FindBin::Bin;
use SymbolTable;
use Unit;


########################################################################


my $problem = 0;


sub error ($) {
    warn shift;
    $problem = 1;
}


sub malformed ($$$$) {
    my ($filename, $handle, $context, $actual) = @_;
    die "$filename:", $handle->input_line_number, ": malformed $context: $actual\n";
}


sub check_signature ($$$) {
    my ($filename, $handle, $signature) = @_;
    malformed $filename, $handle, 'signature', $signature
	unless $signature eq '*0.0';
}


my @units;


foreach my $objectName (@ARGV) {
    my $handle;

    if ($objectName =~ /\.cfg$/) {
	$handle = new FileHandle $objectName, 'r';
	unless ($handle) {
	    error "warning: cannot read $objectName: $!\n";
	    next;
	}

    } elsif (-d $objectName) {
	next;

    } else {
	$handle = new FileHandle;
	my $extractor = "$FindBin::Bin/extract-section";
	if (! open $handle, '-|', $extractor, '.debug_sampler_cfg', $objectName) {
	    error "warning: cannot run $extractor for $objectName: $!\n";
	    next;
	}
    }

    while (my $unit = new Unit $objectName, $handle) {
	push @units, $unit;
    }

    my $exports = new SymbolTable;
    $_->collectExports($exports) foreach @units;
    $_->resolveCallees($exports) foreach @units;

    $handle->close or error "error after reading CFG from $objectName\n";
}


$_->dump foreach @units;    


exit $problem;
